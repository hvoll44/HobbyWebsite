@inject IJSRuntime JSRuntime
@inject IDialogService DialogService

<div class="buttons">
    <MudButton OnClick="ToggleEditMode"
               Variant="Variant.Filled"
               StartIcon="@Icons.Material.Filled.Menu" />
    @if (_showControls)
    {
        <MudButton @onclick="AddPlayerAsync" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.PersonAdd" Color="Color.Primary">Add Player</MudButton>
        <MudButton @onclick="AddRoundAsync" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.AddBox" Color="Color.Secondary">Add Round</MudButton>
        <MudButton @onclick="OpenDialogAsync" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Clear</MudButton>
    }
</div>

<MudTable Items="@_players">
    <HeaderContent>
        <MudTh Class="header"></MudTh>
        @for (int round = 1; round <= _rounds; round++)
        {
            var roundIndex = round;

            <MudTh>@roundIndex</MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <div class="inline-button">
                @if (_showControls)
                {
                    <span class="oi oi-circle-x delete-icon" @onclick="() => DeletePlayer(_players.IndexOf(context))"></span>
                }
                <div class="player-cell">
                    <MudTextField @bind-Value="context.Name"
                                  Placeholder="Player"
                                  Margin="Margin.Dense"
                                  Variant="Variant.Outlined"
                                  OnBlur="OnChangedAsync"
                                  Class="player"
                                  id="@(_players.IndexOf(context) + 1)" />
                    <div class="subtext">
                        Total: @context.Scores.Sum()
                    </div>
                </div>
            </div>
        </MudTd>
        @for (int s = 0; s < context.Scores.Count; s++)
        {
            var scoreIndex = s; //variable needed to reference correct index value

            <MudTd>
                <MudTextField @bind-Value="context.Scores[scoreIndex]"
                              OnBlur="OnChangedAsync"
                              Variant="Variant.Outlined"
                              Margin="Margin.Dense"
                              Class="score-cell" />
            </MudTd>
        }
    </RowTemplate>
</MudTable>