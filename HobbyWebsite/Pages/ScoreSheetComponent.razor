@inject IJSRuntime JSRuntime
@inject IDialogService DialogService

<div class="buttons">
    <MudButton OnClick="ToggleEditMode"
               Variant="Variant.Filled"
               StartIcon="@Icons.Material.Filled.Menu" />
    @if (_showControls)
    {
        <MudButton @onclick="AddPlayerAsync" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.PersonAdd" Color="Color.Primary">Add Player</MudButton>
        <MudButton @onclick="AddRoundAsync" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.AddBox" Color="Color.Secondary">Add Round</MudButton>
        <MudButton @onclick="OpenDialogAsync" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Clear</MudButton>
    }
</div>

<table>
    <thead>
        <tr>
            <th class="header"></th>
            @for (int round = 1; round <= _rounds; round++)
            {
                <th>@round</th>
            }
        </tr>
    </thead>
    <tbody>
        @for (int p = 0; p < _players.Count; p++)
        {
            var playerIndex = p;

            <tr>
                <td>
                    <div class="inline-button">
                        <span class="oi oi-circle-x delete-icon" @onclick="() => DeletePlayer(playerIndex)"></span>
                        <div class="player-cell">
                            <div>
                                <input @bind="@_players[playerIndex].Name"
                                       @bind:event="oninput"
                                       @onchange="OnChangedAsync"
                                       class="player"
                                       id="@(playerIndex + 1)" />
                            </div>
                            <div class="subtext">
                                Total: @_players[playerIndex].Scores.Sum()
                            </div>
                        </div>
                    </div>
                </td>

                @for (int s = 0; s < _players[playerIndex].Scores.Count; s++)
                {
                    var scoreIndex = s;

                    <td>
                        <input @bind="@_players[playerIndex].Scores[scoreIndex]"
                               @bind:event="oninput"
                               @onchange="OnChangedAsync"
                               class="score-cell"/>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>